# Entrance Hall
- id: scene_select_entrance_hall
  alias: Scene Select ‚Äì Entrance Hall
  trigger: [{ platform: state, entity_id: input_select.scene_entrance_hall }]
  action:
    - choose:
        - conditions: "{{ trigger.to_state.state == 'üî¥ OFF' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.entrance_hall_off },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚òÄÔ∏è BRIGHT' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.entrance_hall_on_bright },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üå§Ô∏è WARM' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.entrance_hall_warm_ambience },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚ùÑÔ∏è COOL' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.entrance_hall_cool_focus },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üßπ CLEAN' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.entrance_hall_cleaning },
              },
            ]

# Reception
- id: scene_select_reception
  alias: Scene Select ‚Äì Reception
  trigger: [{ platform: state, entity_id: input_select.scene_reception }]
  action:
    - choose:
        - conditions: "{{ trigger.to_state.state == 'üî¥ OFF' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.reception_off },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚òÄÔ∏è BRIGHT' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.reception_on_bright },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üå§Ô∏è WARM' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.reception_warm_ambience },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚ùÑÔ∏è COOL' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.reception_cool_focus },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üßπ CLEAN' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.reception_cleaning },
              },
            ]

# Hall GF
- id: scene_select_hall_gf
  alias: Scene Select ‚Äì Hall GF
  trigger: [{ platform: state, entity_id: input_select.scene_hall_gf }]
  action:
    - choose:
        - conditions: "{{ trigger.to_state.state == 'üî¥ OFF' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.hall_gf_off },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚òÄÔ∏è BRIGHT' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.hall_gf_on_bright },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üå§Ô∏è WARM' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.hall_gf_warm_ambience },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚ùÑÔ∏è COOL' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.hall_gf_cool_focus },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üßπ CLEAN' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.hall_gf_cleaning },
              },
            ]

# Library
- id: scene_select_library
  alias: Scene Select ‚Äì Library
  trigger: [{ platform: state, entity_id: input_select.scene_library }]
  action:
    - choose:
        - conditions: "{{ trigger.to_state.state == 'üî¥ OFF' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.library_off },
              },
            ]
        - conditions: "{{ trigger.to_state.state == '‚òÄÔ∏è BRIGHT' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.library_on_bright },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üå§Ô∏è WARM' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.library_warm_quiet_study },
              },
            ]
        - conditions: "{{ trigger.to_state.state == 'üßπ CLEAN' }}"
          sequence:
            [
              {
                service: scene.turn_on,
                target: { entity_id: scene.library_cleaning },
              },
            ]

- id: set_global_light_theme
  alias: UI ‚Äì Force Light Theme (Global)
  trigger:
    - platform: homeassistant
      event: start
    - platform: event
      event_type: themes_updated
  action:
    - service: frontend.set_theme
      data:
        name: "Shelly Wall Light"

# ===== Occupancy shims (enable once real sensors exist) =====
- id: presence_sync_rooms
  alias: Occupancy Sync ‚Äì Rooms (Placeholder)
  enabled: false
  mode: queued
  max: 10
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.entrance_hall_occupancy_actual
        - binary_sensor.reception_occupancy_actual
        - binary_sensor.hall_gf_occupancy_actual
        - binary_sensor.library_occupancy_actual
  action:
    - variables:
        helper_map:
          binary_sensor.entrance_hall_occupancy_actual: input_boolean.presence_entrance_hall
          binary_sensor.reception_occupancy_actual: input_boolean.presence_reception
          binary_sensor.hall_gf_occupancy_actual: input_boolean.presence_hall_gf
          binary_sensor.library_occupancy_actual: input_boolean.presence_library
        target_helper: "{{ helper_map.get(trigger.entity_id) }}"
    - choose:
        - conditions:
            - "{{ target_helper is defined and target_helper }}"
            - "{{ trigger.to_state.state == 'on' }}"
          sequence:
            - service: input_boolean.turn_on
              target:
                entity_id: "{{ target_helper }}"
        - conditions:
            - "{{ target_helper is defined and target_helper }}"
            - "{{ trigger.to_state.state == 'off' }}"
          sequence:
            - service: input_boolean.turn_off
              target:
                entity_id: "{{ target_helper }}"
